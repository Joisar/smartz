{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "definitions": {
        "address": {
            "description": "Ethereum address",
            "type": "string",
            "pattern": "^(?:0[Xx])?[0-9a-fA-F]{40}$"
        },

        "ObjectIdHex": {
            "description": "MongoDB ObjectId",
            "type": "string",
            "pattern": "^[0-9a-fA-F]+$"
        },

        "resultError": {
            "type": "object",
            "required": ["error"],
            "properties": {
                "error": { "type": "string" }
            }
        },

        "resultSuccess": {
            "type": "object",
            "required": ["success"],
            "properties": {
                "success": { "type": "boolean", "enum": [true] }
            }
        },

        "simpleResult": {
            "oneOf": [
                { "$ref": "#/definitions/resultError" },
                { "$ref": "#/definitions/resultSuccess" }
            ]
        },

        "ETHABI": {
            "description": "Ethereum contract ABI array",
            "type": "array",
            "items": { "type": "object" }
        },

        "ETHFunctionArgumentList": {
            "description": "Ethereum function inputs or returns list",
            "allOf": [
                {
                    "description": "Schema, custom per instance function, describing function input",
                    "$ref": "http://json-schema.org/draft-04/schema#"
                },
                {
                    "$comment": "at the same time, we are requiring root element of the schema to be an array (otherwise it's not an argument list!)",

                    "type": "object",
                    "required": ["type"],
                    "properties": {
                        "type": {"enum": ["array"]}
                    }
                }
            ]
        },

        "ETHFunctionSpec": {
            "description": "Specification of a function which controls a contract (todo copy of json-schema/public/constructor.json/ETHFunctionAdditionalDescription)",
            "type": "object",
            "required": ["name", "title", "constant", "payable", "inputs", "outputs"],
            "additionalProperties": false,

            "properties": {
                "title": {
                    "description": "Human-friendly name of the function",
                    "type": "string"
                },
                "description": {
                    "description": "Human-friendly description",
                    "type": "string"
                },
                "name": {
                    "description": "ABI name (dont show to user)",
                    "type": "string"
                },
                "sorting_order": {
                    "description": "Sorting order in dashboard",
                    "type": "integer"
                },
                "ui:widget": {
                    "description": "Widget for function result",
                    "type": "string",
                    "enum": ["unixTime", "ethCount", "enum", "url"]
                },
                "ui:widget_options": {
                    "description": "Options of widget for function result",
                    "type": "object",
                    "properties": {
                        "format": { "type": "string" },
                        "enum": { "type": "array", "items": { "type": "string" } },
                        "show_currency": { "type": "string" }
                    }
                },
                "payable_details": {
                    "description": "Title and description of input with ether amount",
                    "type": "object",
                    "properties": {
                        "title": { "type": "string" },
                        "description": { "type": "string" }
                    }
                },
                "constant": { "type": "boolean" },
                "payable": { "type": "boolean" },
                "inputs": { "$ref": "#/definitions/ETHFunctionArgumentList" },
                "outputs": { "$ref": "#/definitions/ETHFunctionArgumentList" }
            }
        }
    },

    "rpc_calls": {
        "set_instance_address": {
            "description": "Sets ethereum address of deployed contract instance",

            "input": {
                "type": "object",
                "required": ["instance_id", "address", "network_id"],
                "additionalProperties": false,

                "properties": {
                    "instance_id": { "$ref": "#/definitions/ObjectIdHex" },
                    "address": { "$ref": "#/definitions/address" },
                    "network_id": {"type": "integer", "minimum": 0}
                }
            },
            "output": { "$ref": "#/definitions/simpleResult" }
        },

        "get_instance_details": {
            "description": "Returns data and metadata necessary to control deployed contract",

            "input": {
                "type": "object",
                "required": ["instance_id"],
                "additionalProperties": false,
                "properties": {
                    "instance_id": { "$ref": "#/definitions/ObjectIdHex" }
                }
            },
            "output": {
                "oneOf": [
                    { "$ref": "#/definitions/resultError" },
                    {
                        "type": "object",
                        "required": ["instance_id", "instance_title", "ctor_id", "address", "network_id", "abi", "functions", "dashboard_functions", "constructor", "blockchain"],
                        "additionalProperties": false,

                        "properties": {
                            "instance_id": { "$ref": "#/definitions/ObjectIdHex" },
                            "instance_title": {"type": "string"},
                            "ctor_id": { "$ref": "#/definitions/ObjectIdHex" },
                            "address": { "$ref": "#/definitions/address" },
                            "network_id": {"type": "integer", "minimum": 0},
                            "abi": { "$ref": "#/definitions/ETHABI" },
                            "blockchain": {"type": "string", "enum": ["eos", "ethereum"]},
                            "functions": {
                                "type": "array",
                                "items": { "$ref": "#/definitions/ETHFunctionSpec" }
                            },
                            "dashboard_functions": {
                                "description": "List of names of functions (which are parameter-less and constant) which results(!) along with name and description should be included in contract dashboard",
                                "type": "array",
                                "items": { "type": "string" }
                            },
                            "constructor": {
                                "type": "object",
                                "required": ["name", "description", "image"],
                                "properties": {
                                    "name": {"type": "string"},
                                    "description": {"type": "string"},
                                    "image": {"type": "string"}
                                }
                            }
                        }
                    }
                ]
            }
        }
    }
}
