language: bash
dist: trusty
sudo: required
services:
  - docker
env:
  global:
  # AWS_REGION
  # AWS_ACCESS_KEY_ID
  # AWS_SECRET_ACCESS_KEY
  - secure: "baC0gKKrAW1zMjgQtdl8BpaZ0UmZd9lVevqx9y8nhCSADdsCM1aydsAOq78n5Hi4auXhop9jnsh7OnaDqH6zSBVUYOQ/BlxmqsaAY2RPnDpZZGfmgqqaLohmdMwKPecf8/bWx0fC0t7F6NWiTB+qh1RXYaIif3LixmDEm2Nt9cwWrat69PP1hckzoe4HeOpsEKy1bT3l/5fiKyLsZboVQfVIp/3gg76AJnNd3AReBEgttFBweF01snwqXkzQy9iTRpcPknwBuCUDDQBRnuva3502/ggUX9Wx1t8BTw8aN6n8iTwy5eB+57GDp2iamRe6BuPZ3jSNdzQaAatAjtkH5rpfBSRz4AKwqIA1JJfjiVHh6NG9FSgMprIlOajWaphWy/ZcmqDntdkxPsD4LgwX2RAL5C2Ym3lC3kJD9173Z7VAiA+bEn0z32RIF7KxUqUUEvEDFTh14JS2Q1fXvNdfQfhA3h5GWflUcCU2aW8nSD5f8s94zwXgzz8RTnUwM+RtD+h8EMudmM0Adf4v5/ABj/Kq+w8NnhU3HAsha+qrmQf0IUe85kv7O61qAOl1terHb98O98j+qYbKgdaRrq99Pa4ysMiOv9bb2jqWgRWexbDubu7/p5d98QNrKqCvE/m8ryx7S33cfcvRNDHLjulxgCAbtg/HjqClRhaMtc8Mx1s="
  - secure: "Z8zzNUxplXtwGVno6btYKq68ER7MnYSJBI6hAcMB/liBJYjfNFuKNLReRmpH6J9wqof4Ecy7y14YNZ2wlS/RmRAKYUkYZAbfJJ/90nYs0WOW68EVBDPW4Nhs75IvHm1kQ07kdHbE0W+BZS6utOWsAjrdCp9JFcqIMR6kmkE49jhsYu2KASNpGcdy7lt3kPoIGn5hu3luAfUvIX5oS0yNNCu0VM7JMtCYg07sVHhBCH26TjqoG1nJde9z0ESsHOj1SA4SqLbf9j7ivwDthPgR8JWG5zP6wU4t4tcvN6GIpMqgP4zeThchFmnpdgpzbOxRkiSWhz8IDblsbYrTM/D7mNUXfDDuDtriBtpA9RSs9w2j6h6qaWtXTbOTVa1FhefUioagHXLXr5drV+Qm3bG5w1140yvR6mmVvENhNjbKgYzFH2sgonQzbMCLH1S+eEHSQQx2TStgKyN9rRiNBtTNkvZoFo4eAELyCjwF45FLt3AS94xDvpJXenXnvoo7rKGzLEfhG/PzGrWYdJuJIAuNN7A+5gwV9h+VI5G3a6M5dQQc8BfX+tIxc/AiMrTIeE3mzw06b7XUovmUzrA2+TtORzW3w3ZxYq+TjpmV5nAIyB+BTLLmxmOlRzfj4cCKyUOgeFfmzxDDakHnZV7Opk01s/2hajLHqzjsKR/Kp7VswPE="
  - secure: "0JAp7doqLK2AXO0j0HEkEVWWUpngymZ1xwvEpHiogTWxE0ODCiqzBYxd+bhKRh7/1zZ5k8TqgeoPDVvdtTfsptm8e4FX0ZOsVdNs4sdapqjYp29kcc/12l5679EVl9fDmDaiHS5VKJrkxZktk5xT98rxITpOdR4Y+0WDf6Wf/5ELnksZ5JxILbQIgfV/mZSAlTzahDV+gXuuFYy1F2ALrQ6SuLrt1zTBGmI+0wbokDX9Fjqfpci3r/y9B+U9rRILi5zb3Ke8In4Jma1QDqHeVX6s8zPodaouLA4bUPYzysYt4jJUV5HunQLxO7EqA5xzPx1hEzXM7ehdvdXMywfxtFm9tbpzT8vlEpDNHbfYqmZPw1y5AvsohlZjKLNBSBFuG0c7sZ1dm1gDMG2bFotlfHy2PNwQ7r8ZZiy/xGvPFC/+hcE8g8fKJ1gqUyyHWxRtdP24vOYBZRhWifc2z+ML5+eq1VuLuuryHyZQJCcEkSHuJjsXtn7buo0vYVxN2cTWZEg7HXcJW/Pe9iCviACXle4iJZUofnIeNDKtyoVsXKhBz2BTsHzan/4LOtX1US4sppIObCQFmZvs2qrUKp4z3QWR7M7d22CmQqneBQMbtbG7SAwXUBPRCFTXrFMXONZK+JKhkz61l1PKFMnGNJZJMsAr03GvWhi0rTibdTh/nNE="
  # AWS_REGISTRY
  - secure: "V8hwbcol3VXTg2jE00KnsXzyL//RV/vvrFmhe1a/FMXuedFhaLd+sp62zWkreIa2Zj3u5VGweDD71sF4RLqvJ+vUeOZLmGNBlR8vn2SSNLthuzUMU0GIEDuYV+M0FyUiCHCTWSbPiPTRpJCZoqhjMm0/oAv5/yUejy4DV+J3pwudvtJkeJP+IC7UZbHDGgPyU/fQbqY9cOH3r2+cCVHcav6sUNurHRgZY5SKbsTVwlrCkFKuSkfQP9WbOpCL3oT3duMV5jbNVpRKJek8Xz75aQuBHcJ2BIHoJUpMAtixbNIZJpSdgAtF65hin76fXevZVjMVRlDmWv3axvOf+3HdXrR9kzeSMFRTtD9mL7EhhMs2IXi3yk2NSdogTzh4r7HnM5pjQEE2LjwOm3jMMxt5zIkq4SswSRxGj2KCl72Jrz/BmHUbEnBJel5WAOJRMJ97+teY0SZL94/07GGYZ+YIe5jy+dZhmsV9EsOneQNdbtffx+TnTZqykTdjjxkNavn1PLLCyn6Wfp2kgv5KrS4YNmDw2WPuiex9Xl6hm9s59FZKrQe8jnnnZ4p7mHUsE8TOXRUtLL/XFRn5DkuOsjV5bNdV2lZFJbkWF3YCmIj7U2JapTrQEUlqYK1oyURJJod7Uq4wj1bIydmYm6Y7ZIRq00AkNkF7OM1drkoDtVEBFy8="

before_install:
- docker --version
- docker-compose --version

install:
- curl -L https://goss.rocks/install | sudo sh

script:
- bash ./test/tests.sh
- docker-compose build
- docker tag smartz_frontend:latest $AWS_REGISTRY/smartz_frontend:latest
- docker tag smartz_backend:latest $AWS_REGISTRY/smartz_backend:latest
- sudo curl -o /usr/local/bin/ecs-cli https://s3.amazonaws.com/amazon-ecs-cli/ecs-cli-linux-amd64-latest
- sudo chmod +x /usr/local/bin/ecs-cli
- ecs-cli configure profile --profile-name travis --access-key $AWS_ACCESS_KEY_ID --secret-key $AWS_SECRET_ACCESS_KEY
- ecs-cli configure --cluster default --default-launch-type EC2 --region $AWS_REGION --config-name travis
- ecs-cli push --region $AWS_REGION  --ecs-profile travis  $AWS_REGISTRY/smartz_frontend:latest
- ecs-cli push --region $AWS_REGION  --ecs-profile travis  $AWS_REGISTRY/smartz_backend:latest
- ecs-cli compose --ecs-profile travis --project-name staging --cluster-config travis --verbose service stop
- ecs-cli compose --ecs-profile travis --project-name staging --cluster-config travis --verbose service start

after_success:

#- if [ "$TRAVIS_BRANCH" == "master" ]; then 
#  docker login -u "$DOCKER_USERNAME" -p
#  "$DOCKER_PASSWORD"; docker push USER/REPO; 
#  fi

notifications:
  email:
    on_success: change
    on_failure: always
