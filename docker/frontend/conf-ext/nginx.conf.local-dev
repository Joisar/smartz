user			nginx;
worker_processes	auto;

error_log	/var/log/nginx/error.log warn;                        
pid		/var/run/nginx.pid;  

events {                        
	worker_connections  4096;
	multi_accept on;
}                               

http {                          
	include       /etc/nginx/mime.types;
	default_type  application/octet-stream;

	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
		'$status $body_bytes_sent "$http_referer" '
		'"$http_user_agent" "$http_x_forwarded_for"';

	access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        tcp_nopush      on;
        tcp_nodelay     on;
        types_hash_max_size     2048;
        server_tokens   on;
        keepalive_timeout       60;
        client_max_body_size    16M;
        client_body_buffer_size 128k;
        gzip  on;
        gzip_disable "msie6";
        gzip_comp_level 1;
        gzip_proxied any;
        gzip_min_length 256;
        gzip_types text/plain text/css text/xml application/json application/x-javascript application/javascript application/xml application/xml+rss text/javascript;
        open_file_cache max=65000 inactive=20s;
        open_file_cache_valid 30s;
        open_file_cache_min_uses 2;
        open_file_cache_errors on;

	upstream local_npm {
		server 127.0.0.1:3000;	
		#server 192.168.88.182:3000;	
	}

	server {
		listen	80 default_server;
		listen	[::]:80 default_server;
		server_name _;
		root /app/web_root;
		index index.html index.htm;

		#proxy_set_header HOST $host;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

		location / {
			proxy_pass http://local_npm;
		}

		location ~ ^/(api|secret-admin) {
			include uwsgi_params;
			uwsgi_read_timeout 120;
			uwsgi_pass unix:/app/sock/backend;
		}
		location ~* \.(?:css(\.map)?|js(\.map)?|jpe?g|png|gif|ico|cur|heic|webp|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv)$ {
			expires off;
			access_log off;
			proxy_pass http://local_npm;
		}
		location ^~ /backend-static/ {
			alias /app/staticfiles/;
			expires off;
		}
		location = /favicon.ico {
			access_log off;
		}
		location = /robots.txt {
			allow all;
			access_log off;
		}
	        location = /health {
        	        return 200;
                	access_log off;
	        }
	}
}
